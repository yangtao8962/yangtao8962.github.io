(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{437:function(e,a,s){"use strict";s.r(a);var t=s(56),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"安装常用服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装常用服务"}},[e._v("#")]),e._v(" 安装常用服务")]),e._v(" "),s("p",[e._v("DockerHub库 https://hub.docker.com/，注意Tags和Description中的 How to use this image")]),e._v(" "),s("h3",{attrs:{id:"mysql-5-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql-5-7"}},[e._v("#")]),e._v(" MySQL 5.7")]),e._v(" "),s("h5",{attrs:{id:"拉取镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像"}},[e._v("#")]),e._v(" 拉取镜像")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull mysql:5.7.34\n")])])]),s("h5",{attrs:{id:"配置密码并启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置密码并启动"}},[e._v("#")]),e._v(" 配置密码并启动")]),e._v(" "),s("blockquote",[s("p",[e._v("Starting a MySQL instance is simple:")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag\n")])])]),s("p",[e._v("... where "),s("code",[e._v("some-mysql")]),e._v(" is the name you want to assign to your container, "),s("code",[e._v("my-secret-pw")]),e._v(" is the password to be set for the MySQL root user and "),s("code",[e._v("tag")]),e._v(" is the tag specifying the MySQL version you want. See the list above for relevant tags.")])]),e._v(" "),s("p",[s("code",[e._v("-e MYSQL_ROOT_PASSWORD=root")]),e._v(" ：给root用户指定密码")]),e._v(" "),s("p",[e._v("启动一个mysql服务，后台运行，指定root用户密码，指定容器名字")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3306")]),e._v(":3306 -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("root --name mysql mysql:5.7.34\n")])])]),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002703159.png",alt:""}})]),e._v(" "),s("p",[e._v("之后就可以使用3306端口和主机号登录了。")]),e._v(" "),s("h5",{attrs:{id:"配置数据持久化-数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置数据持久化-数据卷"}},[e._v("#")]),e._v(" 配置数据持久化（数据卷）")]),e._v(" "),s("blockquote",[s("p",[e._v("Where to Store Data")]),e._v(" "),s("p",[e._v("Important note: There are several ways to store data used by applications that run in Docker containers. We encourage users of the "),s("code",[e._v("mysql")]),e._v(" images to familiarize themselves with the options available, including:")]),e._v(" "),s("ul",[s("li",[e._v("Let Docker manage the storage of your database data "),s("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockervolumes/#adding-a-data-volume",target:"_blank",rel:"noopener noreferrer"}},[e._v("by writing the database files to disk on the host system using its own internal volume management"),s("OutboundLink")],1),e._v(". This is the default and is easy and fairly transparent to the user. The downside is that the files may be hard to locate for tools and applications that run directly on the host system, i.e. outside containers.")]),e._v(" "),s("li",[e._v("Create a data directory on the host system (outside the container) and "),s("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockervolumes/#mount-a-host-directory-as-a-data-volume",target:"_blank",rel:"noopener noreferrer"}},[e._v("mount this to a directory visible from inside the container"),s("OutboundLink")],1),e._v(". This places the database files in a known location on the host system, and makes it easy for tools and applications on the host system to access the files. The downside is that the user needs to make sure that the directory exists, and that e.g. directory permissions and other security mechanisms on the host system are set up correctly.")])]),e._v(" "),s("p",[e._v("The Docker documentation is a good starting point for understanding the different storage options and variations, and there are multiple blogs and forum postings that discuss and give advice in this area. We will simply show the basic procedure here for the latter option above:")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Create a data directory on a suitable volume on your host system, e.g. "),s("code",[e._v("/my/own/datadir")]),e._v(".")])]),e._v(" "),s("li",[s("p",[e._v("Start your "),s("code",[e._v("mysql")]),e._v(" container like this:")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ docker run --name some-mysql -v /my/own/datadir:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag\n")])])])])]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("-v /my/own/datadir:/var/lib/mysql")]),e._v(" part of the command mounts the "),s("code",[e._v("/my/own/datadir")]),e._v(" directory from the underlying host system as "),s("code",[e._v("/var/lib/mysql")]),e._v(" inside the container, where MySQL by default will write its data files.")])]),e._v(" "),s("p",[e._v("通过官方文档得知该镜像创建的容器将mysql 的数据存放在 "),s("code",[e._v("/var/lib/mysql")]),e._v("目录下")]),e._v(" "),s("p",[e._v("配置数据卷")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3306")]),e._v(":3306 -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("root --name mysql -v mysqldata:/var/lib/mysql mysql:5.7.34\n")])])]),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002714492.png",alt:""}})]),e._v(" "),s("p",[e._v("使用Navicat Premium连接并新建一个数据库")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002722797.png",alt:""}})]),e._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002728025.png",alt:""}})]),e._v(" "),s("p",[e._v("新建后可看到数据库已持久化到宿主机")]),e._v(" "),s("p",[s("code",[e._v("验证")])]),e._v(" "),s("p",[e._v("此时我们再次创建一个mysql镜像，使用3307端口，命名为mysql_3307，数据卷配置同样是mysqldata")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3307")]),e._v(":3306 -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("root --name mysql_3307 -v mysqldata:/var/lib/mysql mysql:5.7.34\n")])])]),s("p",[e._v("创建成功后使用软件连接")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002740465.png",alt:""}})]),e._v(" "),s("p",[e._v("可以看到由于 "),s("code",[e._v("/var/lib/docker/volumes/mysqldata/_data")]),e._v("中存有test数据库，因此新的镜像配置数据卷、连接后也有数据库test")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002748439.png",alt:""}})]),e._v(" "),s("h5",{attrs:{id:"配置文件映射到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置文件映射到本地"}},[e._v("#")]),e._v(" 配置文件映射到本地")]),e._v(" "),s("p",[e._v("启动一个mysql服务，后台运行，指定root用户密码，指定容器名字，使用数据卷进行数据持久化，并将配置文件映射到宿主机的某个文件")]),e._v(" "),s("blockquote",[s("p",[e._v("Using a custom MySQL configuration file")]),e._v(" "),s("p",[e._v("The default configuration for MySQL can be found in "),s("code",[e._v("/etc/mysql/my.cnf")]),e._v(", which may "),s("code",[e._v("!includedir")]),e._v(" additional directories such as "),s("code",[e._v("/etc/mysql/conf.d")]),e._v(" or "),s("code",[e._v("/etc/mysql/mysql.conf.d")]),e._v(". Please inspect the relevant files and directories within the "),s("code",[e._v("mysql")]),e._v(" image itself for more details.")]),e._v(" "),s("p",[e._v("If "),s("code",[e._v("/my/custom/config-file.cnf")]),e._v(" is the path and name of your custom configuration file, you can start your "),s("code",[e._v("mysql")]),e._v(" container like this (note that only the directory path of the custom config file is used in this command):")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ docker run --name some-mysql -v /my/custom:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag\n")])])]),s("p",[e._v("This will start a new container "),s("code",[e._v("some-mysql")]),e._v(" where the MySQL instance uses the combined startup settings from "),s("code",[e._v("/etc/mysql/my.cnf")]),e._v(" and "),s("code",[e._v("/etc/mysql/conf.d/config-file.cnf")]),e._v(", with settings from the latter taking precedence.")])]),e._v(" "),s("p",[e._v("由官方文档可知，mysql的配置文件在容器内的 "),s("code",[e._v("/etc/mysql")]),e._v("目录下，我们可以将这个目录与主机的目录进行映射")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3306")]),e._v(":3306 -e "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MYSQL_ROOT_PASSWORD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("root --name mysql_3306 -v mysqldata:/var/lib/mysql -v mysqlconfig:/etc/mysql mysql:5.7.34\n")])])]),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002759936.png",alt:""}})]),e._v(" "),s("p",[e._v("以后要修改配置文件，就直接修改宿主机"),s("code",[e._v("/var/lib/docker/volumes/mysqlconfig/_data")]),e._v("目录下的配置文件就行了。")]),e._v(" "),s("h3",{attrs:{id:"tomcat8-5-68-jdk8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tomcat8-5-68-jdk8"}},[e._v("#")]),e._v(" Tomcat8.5.68-jdk8")]),e._v(" "),s("h5",{attrs:{id:"拉取镜像-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像-2"}},[e._v("#")]),e._v(" 拉取镜像")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull tomcat:8.5.68-jdk8\n")])])]),s("h5",{attrs:{id:"映射webapps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射webapps"}},[e._v("#")]),e._v(" 映射webapps")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("8081")]),e._v(":8080 --name tomcat8 -v tomcat8_webapps:/usr/local/tomcat/webapps tomcat:8.5.68-jdk8\n")])])]),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002813717.png",alt:""}})]),e._v(" "),s("p",[e._v("访问：")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002837157.png",alt:""}})]),e._v(" "),s("h5",{attrs:{id:"映射配置文件-webapps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射配置文件-webapps"}},[e._v("#")]),e._v(" 映射配置文件+webapps")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("8081")]),e._v(":8080 --name tomcat8 -v tomcat8_webapps:/usr/local/tomcat/webapps -v tomcat8_confs:/usr/local/tomcat/conf tomcat:8.5.68-jdk8\n")])])]),s("p",[e._v("注意：在修改端口后，由于容器启动的命令是不能修改的，即宿主机端口映射的始终都是启动容器时配置的端口，导致宿主机端口无法映射到tomcat新端口，无法使用。")]),e._v(" "),s("p",[e._v("==万无一失：在修改完配置文件后，直接重启一个新的容器==")]),e._v(" "),s("h3",{attrs:{id:"redis-5-0-10"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-5-0-10"}},[e._v("#")]),e._v(" Redis 5.0.10")]),e._v(" "),s("h5",{attrs:{id:"拉取镜像-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取镜像-3"}},[e._v("#")]),e._v(" 拉取镜像")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull redis:5.0.10\n")])])]),s("h5",{attrs:{id:"启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[e._v("#")]),e._v(" 启动")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v(":6379 --name redis redis:5.0.10\n")])])]),s("h5",{attrs:{id:"开启redis持久化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启redis持久化"}},[e._v("#")]),e._v(" 开启redis持久化")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v(":6379 --name redis redis:5.0.10 redis-server --appendonly "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yes")]),e._v("\n")])])]),s("blockquote",[s("p",[e._v("start with persistent storage")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ docker run --name some-redis -d redis redis-server --appendonly yes\n")])])]),s("p",[e._v("If persistence is enabled, data is stored in the "),s("code",[e._v("VOLUME /data")]),e._v(", which can be used with "),s("code",[e._v("--volumes-from some-volume-container")]),e._v(" or "),s("code",[e._v("-v /docker/host/dir:/data")]),e._v(" (see "),s("a",{attrs:{href:"https://docs.docker.com/engine/tutorials/dockervolumes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("docs.docker volumes"),s("OutboundLink")],1),e._v(").")]),e._v(" "),s("p",[e._v("For more about Redis Persistence, see http://redis.io/topics/persistence.")])]),e._v(" "),s("p",[e._v("开启持久化之后，持久化生成的aof文件会被放入容器 "),s("code",[e._v("/data")]),e._v("目录中")]),e._v(" "),s("p",[e._v("所以完整的命令为")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v(":6379 -v redisdata:/data --name redis redis:5.0.10 redis-server --appendonly "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("yes")]),e._v("\n")])])]),s("h5",{attrs:{id:"自定义redis配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义redis配置文件"}},[e._v("#")]),e._v(" 自定义redis配置文件")]),e._v(" "),s("blockquote",[s("p",[e._v("Additionally, If you want to use your own redis.conf ...")]),e._v(" "),s("p",[e._v("You can create your own Dockerfile that adds a redis.conf from the context into /data/, like so.")]),e._v(" "),s("div",{staticClass:"language-dockerfile extra-class"},[s("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[s("code",[s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" redis")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("COPY")]),e._v(" redis.conf /usr/local/etc/redis/redis.conf")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token instruction"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("CMD")]),e._v(" [ "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"redis-server"')]),e._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"/usr/local/etc/redis/redis.conf"')]),e._v(" ]")]),e._v("\n")])])]),s("p",[e._v("Alternatively, you can specify something along the same lines with "),s("code",[e._v("docker run")]),e._v(" options.")]),e._v(" "),s("div",{staticClass:"language-console extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ docker run -v /myredis/conf:/usr/local/etc/redis --name myredis redis redis-server /usr/local/etc/redis/redis.conf\n")])])]),s("p",[e._v("Where "),s("code",[e._v("/myredis/conf/")]),e._v(" is a local directory containing your "),s("code",[e._v("redis.conf")]),e._v(" file. Using this method means that there is no need for you to have a Dockerfile for your redis container.")]),e._v(" "),s("p",[e._v("The mapped directory should be writable, as depending on the configuration and mode of operation, Redis may need to create additional configuration files or rewrite existing ones.")])]),e._v(" "),s("p",[e._v("官网下载redis对应的配置文件 redis.conf，放置在宿主机中，注意修改配置文件中 "),s("code",[e._v("bind 0.0.0.0")]),e._v("，之后将这个配置文件所在的目录映射到容器中的 "),s("code",[e._v("/usr/local/etc/redis")]),e._v("目录下，通过命令启动")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v(":6379 -v /root/redisconf:/usr/local/etc/redis --name redis redis:5.0.10 redis-server /usr/local/etc/redis/redis.conf\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);