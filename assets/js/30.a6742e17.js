(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{428:function(t,s,a){"use strict";a.r(s);var e=a(56),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[t._v("#")]),t._v(" Docker Compose")]),t._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("\t`Compose` 项目是 Docker 官方的开源项目，负责`实现对Docker容器集群的快速编排`。定义和运行多个 Docker 容器（Defining and running multi-container Docker applications）\n")])])]),a("p",[t._v("​\t\t 在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器、redis服务器，甚至还包括负载均衡容器等。"),a("code",[t._v("Compose")]),t._v(" 恰好满足了这样的需求。它允许用户通过一个单独的 "),a("code",[t._v("docker-compose.yml")]),t._v(" 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。")]),t._v(" "),a("h3",{attrs:{id:"核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),a("p",[a("code",[t._v("服务（service）")])]),t._v(" "),a("p",[t._v("一个用用的容器，实际上还可以包含若干运行相同镜像容器实例。")]),t._v(" "),a("p",[a("code",[t._v("项目（project）")])]),t._v(" "),a("p",[t._v("由一组关联的应用容器组成的一个完整业务单元，在"),a("code",[t._v("docker-compose.yml")]),t._v("中定义")]),t._v(" "),a("h3",{attrs:{id:"安装与卸载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装与卸载"}},[t._v("#")]),t._v(" 安装与卸载")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -s"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("-"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -m"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /usr/local/bin/docker-compose\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v(" +x /usr/local/bin/docker-compose\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" -v \t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检测是否安装成功")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" /usr/local/bin/docker-compose\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 卸载")]),t._v("\n")])])]),a("h3",{attrs:{id:"模板文件和模板指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板文件和模板指令"}},[t._v("#")]),t._v(" 模板文件和模板指令")]),t._v(" "),a("p",[t._v("模板文件是使用 "),a("code",[t._v("Compose")]),t._v(" 的核心，涉及到的指令关键字也比较多。但大家不用担心，这里面大部分指令跟 "),a("code",[t._v("docker run")]),t._v(" 相关参数的含义都是类似的。")]),t._v(" "),a("p",[t._v("默认的模板文件名称为 "),a("code",[t._v("docker-compose.yml")]),t._v("，格式为 YAML 格式。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webapp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" examples/web\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"80:80"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/data"')]),t._v("\n")])])]),a("p",[t._v("注意每个服务都必须通过 "),a("code",[t._v("image")]),t._v(" 指令指定镜像或 "),a("code",[t._v("build")]),t._v(" 指令（需要 Dockerfile）等来自动构建生成镜像。")]),t._v(" "),a("p",[t._v("如果使用 "),a("code",[t._v("build")]),t._v(" 指令，在 "),a("code",[t._v("Dockerfile")]),t._v(" 中设置的选项(例如："),a("code",[t._v("CMD")]),t._v(", "),a("code",[t._v("EXPOSE")]),t._v(", "),a("code",[t._v("VOLUME")]),t._v(", "),a("code",[t._v("ENV")]),t._v(" 等) 将会自动被获取，无需在 "),a("code",[t._v("docker-compose.yml")]),t._v(" 中重复设置。")]),t._v(" "),a("p",[t._v("下面分别介绍各个指令的用法。")]),t._v(" "),a("h5",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" "),a("code",[t._v("build")])]),t._v(" "),a("p",[t._v("原有步骤：Dockerfile -> 打包镜像 -> docker compose，可以使用build将这个步骤省略")]),t._v(" "),a("p",[t._v("指定 "),a("code",[t._v("Dockerfile")]),t._v(" 所在文件夹的路径（可以是绝对路径，或者相对 docker-compose.yml 文件的路径）。 "),a("code",[t._v("Compose")]),t._v(" 将会利用它自动构建这个镜像，然后使用这个镜像。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webapp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./dir\n")])])]),a("p",[t._v("你也可以使用 "),a("code",[t._v("context")]),t._v(" 指令指定 "),a("code",[t._v("Dockerfile")]),t._v(" 所在文件夹的路径。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("dockerfile")]),t._v(" 指令指定 "),a("code",[t._v("Dockerfile")]),t._v(" 文件名。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("arg")]),t._v(" 指令指定构建镜像时的变量。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webapp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./dir\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dockerfile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alternate\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("buildno")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h5",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[t._v("#")]),t._v(" "),a("code",[t._v("command")])]),t._v(" "),a("p",[t._v("覆盖容器启动后默认执行的命令。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' echo "hello world"\n')])])]),a("h5",{attrs:{id:"container-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#container-name"}},[t._v("#")]),t._v(" "),a("code",[t._v("container_name")])]),t._v(" "),a("p",[t._v("指定容器名称。默认将会使用 "),a("code",[t._v("项目名称_服务名称_序号")]),t._v(" 这样的格式。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("web"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("container\n")])])]),a("blockquote",[a("p",[t._v("注意: 指定容器名称后，该服务将无法进行扩展（scale），因为 Docker 不允许多个容器具有相同的名称。")])]),t._v(" "),a("h5",{attrs:{id:"depends-on"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#depends-on"}},[t._v("#")]),t._v(" "),a("code",[t._v("depends_on")])]),t._v(" "),a("p",[t._v("解决容器的依赖、启动先后的问题。以下例子中会先启动 "),a("code",[t._v("redis")]),t._v(" "),a("code",[t._v("db")]),t._v(" 再启动 "),a("code",[t._v("web")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" db\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" redis\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("db")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n")])])]),a("blockquote",[a("p",[t._v("注意："),a("code",[t._v("web")]),t._v(" 服务不会等待 "),a("code",[t._v("redis")]),t._v(" "),a("code",[t._v("db")]),t._v(" 「完全启动」之后才启动。")])]),t._v(" "),a("h5",{attrs:{id:"env-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#env-file"}},[t._v("#")]),t._v(" "),a("code",[t._v("env_file")])]),t._v(" "),a("p",[t._v("从文件中获取环境变量，可以为单独的文件路径或列表。")]),t._v(" "),a("p",[t._v("如果通过 "),a("code",[t._v("docker-compose -f FILE")]),t._v(" 方式来指定 Compose 模板文件，则 "),a("code",[t._v("env_file")]),t._v(" 中变量的路径会基于模板文件路径。")]),t._v(" "),a("p",[t._v("如果有变量名称与 "),a("code",[t._v("environment")]),t._v(" 指令冲突，则按照惯例，以后者为准。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("env_file: .envenv_file:  - ./common.env  - ./apps/web.env  - /opt/secrets.env\n")])])]),a("p",[t._v("环境变量文件中每一行必须符合格式，支持 "),a("code",[t._v("#")]),t._v(" 开头的注释行。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# common.env: Set development environmentPROG_ENV=development")]),t._v("\n")])])]),a("h5",{attrs:{id:"environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[t._v("#")]),t._v(" "),a("code",[t._v("environment")])]),t._v(" "),a("p",[t._v("设置环境变量。你可以使用数组或字典两种格式。")]),t._v(" "),a("p",[t._v("只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("RACK_ENV")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("development  SESSION_SECRET:environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" RACK_ENV=development  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" SESSION_SECRET\n")])])]),a("p",[t._v("如果变量名称或者值中用到 "),a("code",[t._v("true|false，yes|no")]),t._v(" 等表达 "),a("a",{attrs:{href:"https://yaml.org/type/bool.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("布尔"),a("OutboundLink")],1),t._v(" 含义的词汇，最好放到引号里，避免 YAML 自动解析某些内容为对应的布尔语义。这些特定词汇，包括")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Yes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("YES"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("N"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("No"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("NO"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("True"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("TRUE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("False"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("FALSE"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("On"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ON"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("off"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Off"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("OFF\n")])])]),a("h5",{attrs:{id:"healthcheck"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#healthcheck"}},[t._v("#")]),t._v(" "),a("code",[t._v("healthcheck")])]),t._v(" "),a("p",[t._v("心跳检查，通过命令检查容器是否健康运行。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("healthcheck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CMD"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"curl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  interval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("1m30s  timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("10s  retries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),a("h5",{attrs:{id:"image"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[t._v("#")]),t._v(" "),a("code",[t._v("image")])]),t._v(" "),a("p",[t._v("指定为镜像名称或镜像 ID。如果镜像在本地不存在，"),a("code",[t._v("Compose")]),t._v(" 将会尝试拉取这个镜像。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ubuntuimage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("orchardup/postgresqlimage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" a4bc65fd\n")])])]),a("h5",{attrs:{id:"networks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#networks"}},[t._v("#")]),t._v(" "),a("code",[t._v("networks")])]),t._v(" "),a("p",[t._v("配置容器连接的网络。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "3"services'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("some-service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("some-network     - other-networknetworks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("some-network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("other-network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),a("h5",{attrs:{id:"ports"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ports"}},[t._v("#")]),t._v(" "),a("code",[t._v("ports")])]),t._v(" "),a("p",[t._v("暴露端口信息。")]),t._v(" "),a("p",[t._v("使用宿主端口：容器端口 "),a("code",[t._v("(HOST:CONTAINER)")]),t._v(" 格式，或者仅仅指定容器的端口（宿主将会随机选择端口）都可以。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' "3000" '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' "8000'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('8000" '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(' "49100'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v('22" '),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1:8001:8001"')]),t._v("\n")])])]),a("p",[a("em",[t._v("注意：当使用 "),a("code",[t._v("HOST:CONTAINER")]),t._v(" 格式来映射端口时，如果你使用的容器端口小于 60 并且没放到引号里，可能会得到错误结果，因为 "),a("code",[t._v("YAML")]),t._v(" 会自动解析 "),a("code",[t._v("xx:yy")]),t._v(" 这种数字格式为 60 进制。为避免出现这种问题，建议数字串都采用引号包括起来的字符串格式。")])]),t._v(" "),a("h5",{attrs:{id:"sysctls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sysctls"}},[t._v("#")]),t._v(" "),a("code",[t._v("sysctls")])]),t._v(" "),a("p",[t._v("配置容器内核参数。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sysctls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("net.core.somaxconn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("net.ipv4.tcp_syncookies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sysctls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" net.core.somaxconn=1024\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" net.ipv4.tcp_syncookies=0\n")])])]),a("h5",{attrs:{id:"ulimits"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ulimits"}},[t._v("#")]),t._v(" "),a("code",[t._v("ulimits")])]),t._v(" "),a("p",[t._v("指定容器的 ulimits 限制值。")]),t._v(" "),a("p",[t._v("例如，指定最大进程数为 65535，指定文件句柄数为 20000（软限制，应用可以随时修改，不能超过硬限制） 和 40000（系统硬限制，只能 root 用户提高）。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ulimits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nproc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65535")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("nofile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("soft")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20000")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("40000")]),t._v("\n")])])]),a("h5",{attrs:{id:"volumes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#volumes"}},[t._v("#")]),t._v(" "),a("code",[t._v("volumes")])]),t._v(" "),a("p",[t._v("数据卷所挂载路径设置。可以设置为宿主机路径("),a("code",[t._v("HOST:CONTAINER")]),t._v(")或者数据卷名称("),a("code",[t._v("VOLUME:CONTAINER")]),t._v(")，并且可以设置访问模式 （"),a("code",[t._v("HOST:CONTAINER:ro")]),t._v("）。")]),t._v(" "),a("p",[t._v("该指令中路径支持相对路径。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /var/lib/mysql\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" cache/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/tmp/cache\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ~/configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/configs/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("ro\n")])])]),a("p",[t._v("如果路径为数据卷名称，必须在文件中配置数据卷。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("my_src")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql_data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql_data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),a("h3",{attrs:{id:"模板实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板实例"}},[t._v("#")]),t._v(" 模板实例")]),t._v(" "),a("ol",[a("li",[t._v("创建一个docker-compose.yml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.2"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("demo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定上下文目录，即Dockerfile所在目录，绝对路径相对路径都行")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dockerfile    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定Dockerfile")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# build完成后的容器名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8081:8081"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcat01\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat01    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于run时的 --name")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.5.68"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jdk8   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于run时的 image")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于run时的 -p")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8081:8080"')]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以写多个")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于run时的 -v")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     - /var/lib/docker/volumes/tomcat8_webapps:/usr/local/tomcat/webapps   # 自定义映射路径")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcat8_webapps01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自动映射，但必须声明")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于run时的 --network， 当前服务使用哪个桥")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcat02      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置tomcat01依赖于 tomcat02，这里的tomcat02是服务名")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat02")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat02\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tomcat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("8.5.68"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("jdk8\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8082:8080"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" tomcat8_webapps02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/usr/local/tomcat/webapps\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysql")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.7.34\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mysql\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3307:3306"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysqldata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/var/lib/mysql\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysqlconf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/etc/mysql\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    environment:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#      - MYSQL_ROOT_PASSWORD=root    # 这种相对敏感的数据，可以使用env_file代替")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" mysql.env\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在host主机中的位置可以是相对路径，也可以是绝对路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" hello\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("5.0.10\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6379:6379"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" redisdata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("/data\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis-server --appendonly yes"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于run镜像之后覆盖容器内默认命令")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 声明上面服务所使用的自动创建的卷名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat8_webapps01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 声明指令的卷名，自动创建卷名，但是会自动加入项目名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否使用自定义的卷名，如果为true，就必须先手动创建卷")]),t._v("\n      false\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tomcat8_webapps02")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysqldata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mysqlconf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("redisdata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义服务用到的桥")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hello")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义上面的服务用到的的网桥名称，默认创建是bridge")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("external")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果为true，同样是需要手动创建")]),t._v("\n      false\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("运行docker-compose")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动，必须保证当前目录下由配置文件docker-compose.yml")]),t._v("\n")])])]),a("h3",{attrs:{id:"docker-compose指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose指令"}},[t._v("#")]),t._v(" docker-compose指令")]),t._v(" "),a("p",[t._v("注意区分指令和模板指令，模板指令是在docker-compose.yml中的，而"),a("code",[t._v("指令是对docker-compose.yml进行操作的")])]),t._v(" "),a("h5",{attrs:{id:"命令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令选项"}},[t._v("#")]),t._v(" "),a("code",[t._v("命令选项")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-f, --file FILE")]),t._v(" 指定使用的 Compose 模板文件，默认为 "),a("code",[t._v("docker-compose.yml")]),t._v("，可以多次指定。")]),t._v(" "),a("li",[a("code",[t._v("-p, --project-name NAME")]),t._v(" 指定项目名称，默认将使用所在目录名称作为项目名。")]),t._v(" "),a("li",[a("code",[t._v("--x-networking")]),t._v(" 使用 Docker 的可拔插网络后端特性")]),t._v(" "),a("li",[a("code",[t._v("--x-network-driver DRIVER")]),t._v(" 指定网络后端的驱动，默认为 "),a("code",[t._v("bridge")])]),t._v(" "),a("li",[a("code",[t._v("--verbose")]),t._v(" 输出更多调试信息。")]),t._v(" "),a("li",[a("code",[t._v("-v, --version")]),t._v(" 打印版本并退出。")])]),t._v(" "),a("h5",{attrs:{id:"帮助指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帮助指令"}},[t._v("#")]),t._v(" "),a("code",[t._v("帮助指令")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v("\n")])])]),a("h5",{attrs:{id:"up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#up"}},[t._v("#")]),t._v(" "),a("code",[t._v("up")])]),t._v(" "),a("p",[t._v("启动项目")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" up "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SERVICE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t-f：当yml文件名不为docker-compose.yml时，可以添加-f指定yml文件\t-d：后台运行所有容器docker-compose up -f XXX-compose.yml -d\n")])])]),a("h5",{attrs:{id:"down"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#down"}},[t._v("#")]),t._v(" "),a("code",[t._v("down")])]),t._v(" "),a("ul",[a("li",[t._v("此命令将会停止 "),a("code",[t._v("up")]),t._v(" 命令所启动的容器，并移除网络")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" down\n")])])]),a("h5",{attrs:{id:"exec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[t._v("#")]),t._v(" "),a("code",[t._v("exec")])]),t._v(" "),a("ul",[a("li",[t._v("进入指定的容器。")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bashdocker-compose "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it tomcat01 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n")])])]),a("h5",{attrs:{id:"ps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ps"}},[t._v("#")]),t._v(" "),a("code",[t._v("ps")])]),t._v(" "),a("p",[t._v("列出项目中目前的所有容器。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t-q：只打印容器iddocker-compose psdocker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -q\n")])])]),a("h5",{attrs:{id:"restart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restart"}},[t._v("#")]),t._v(" "),a("code",[t._v("restart")])]),t._v(" "),a("p",[t._v("重启项目中的服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" restart "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t-t：指定重启前停止容器的超时时间（默认10s）docker-compose restart -t 20docker-compose restart tomcat01\n")])])]),a("h5",{attrs:{id:"rm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[t._v("#")]),t._v(" "),a("code",[t._v("rm")])]),t._v(" "),a("p",[t._v("删除所有（停止状态的）服务容器。推荐先执行 "),a("code",[t._v("docker-compose stop")]),t._v(" 命令来停止容器。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t-f：强制删除，包括非停止状态的容器，一般不使用\t-v：删除容器所挂在的数据卷docker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" tomcat01docker-compose "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -f -v tomcat01\n")])])]),a("h5",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[t._v("#")]),t._v(" "),a("code",[t._v("start")])]),t._v(" "),a("p",[t._v("启动已经存在的服务容器。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" start "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("docker-compose start tomcat01\n")])])]),a("h5",{attrs:{id:"stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" "),a("code",[t._v("stop")])]),t._v(" "),a("p",[t._v("停止已经处于运行状态的容器，但不删除它。通过 "),a("code",[t._v("docker-compose start")]),t._v(" 可以再次启动这些容器。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" stop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\t-t：停止容器时候的超时时间（默认10s）docker-compose start -t "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" tomcat01\n")])])]),a("h5",{attrs:{id:"top"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#top"}},[t._v("#")]),t._v(" "),a("code",[t._v("top")])]),t._v(" "),a("p",[t._v("查看各个服务容器内运行的进程。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v("\n")])])]),a("h5",{attrs:{id:"pause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pause"}},[t._v("#")]),t._v(" "),a("code",[t._v("pause")])]),t._v(" "),a("p",[t._v("暂停某个服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" pause tomcat01\n")])])]),a("h5",{attrs:{id:"unpause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unpause"}},[t._v("#")]),t._v(" "),a("code",[t._v("unpause")])]),t._v(" "),a("p",[t._v("恢复处于暂停状态中的服务。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" unpause "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" unpause tomcat01\n")])])]),a("p",[a("code",[t._v("logs")])]),t._v(" "),a("p",[t._v("查看日志，可精确到某个服务")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" logs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("serviceId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" logs tomcat01\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);