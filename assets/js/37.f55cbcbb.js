(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{435:function(t,a,s){"use strict";s.r(a);var e=s(56),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"docker网络通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker网络通信"}},[t._v("#")]),t._v(" docker网络通信")]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("blockquote",[s("p",[t._v("Docker允许通过外部访问容器或容器互联的方式来提供网络服务。")])]),t._v(" "),s("h3",{attrs:{id:"通信机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信机制"}},[t._v("#")]),t._v(" 通信机制")]),t._v(" "),s("p",[t._v("当 Docker 启动时，会自动在主机上创建一个 "),s("code",[t._v("docker0")]),t._v(" 虚拟网桥，实际上是 Linux 的一个 bridge，可以理解为一个软件交换机。它会在挂载到它的网口之间进行转发。")]),t._v(" "),s("p",[t._v("同时，Docker 随机分配一个本地未占用的私有网段（在 "),s("a",{attrs:{href:"https://tools.ietf.org/html/rfc1918",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC1918"),s("OutboundLink")],1),t._v(" 中定义）中的一个地址给 "),s("code",[t._v("docker0")]),t._v(" 接口。比如典型的 "),s("code",[t._v("172.17.42.1")]),t._v("，掩码为 "),s("code",[t._v("255.255.0.0")]),t._v("。此后启动的容器内的网口也会自动分配一个同一网段（"),s("code",[t._v("172.17.0.0/16")]),t._v("）的地址。")]),t._v(" "),s("p",[t._v("当创建一个 Docker 容器的时候，同时会创建了一对 "),s("code",[t._v("veth pair")]),t._v(" 接口（当数据包发送到一个接口时，另外一个接口也可以收到相同的数据包）。这对接口一端在容器内，即 "),s("code",[t._v("eth0")]),t._v("；另一端在本地并被挂载到 "),s("code",[t._v("docker0")]),t._v(" 网桥，名称以 "),s("code",[t._v("veth")]),t._v(" 开头（例如 "),s("code",[t._v("vethAQI2QT")]),t._v("）。通过这种方式，主机可以跟容器通信，容器之间也可以相互通信。Docker 就创建了在主机和所有容器之间一个虚拟共享网络。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/yangtao8453/picgo/raw/master/img/image-20220224002644150.png",alt:""}})]),t._v(" "),s("p",[t._v("注意：一般在shiyongdocker网桥（bridge）实现容器与容器通信时，都是站在一个应用角度进行容器通信，即为 ==不同的容器创建不同的网桥==。")]),t._v(" "),s("h3",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),s("h5",{attrs:{id:"查看网络信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看网络信息"}},[t._v("#")]),t._v(" 查看网络信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n")])])]),s("h5",{attrs:{id:"创建一个网桥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个网桥"}},[t._v("#")]),t._v(" 创建一个网桥")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create 网桥名称\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create -d bridge 网桥名称\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create ems\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network create -d bridge ems\n")])])]),s("h5",{attrs:{id:"启动容器时指定网桥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动容器时指定网桥"}},[t._v("#")]),t._v(" 启动容器时指定网桥")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run --name 网桥名称 镜像名或id\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -d -p "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(":8080 --name tomcat01 --network ems tomcat8.0-jre8\n")])])]),s("p",[t._v("注意：启动一个容器后且指定了网桥名称（这个网桥是必须存在的），容器名与IP地址就会进行映射，如容器tomcat01的IP地址为172.17.0.2，那么一下两种操作是等效的")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://172.17.0.2:8080\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" tomcat01:8080\n")])])]),s("h5",{attrs:{id:"删除网桥"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除网桥"}},[t._v("#")]),t._v(" 删除网桥")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" 网桥名称\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" network "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" ems\n")])])]),s("h5",{attrs:{id:"查看网桥信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看网桥信息"}},[t._v("#")]),t._v(" 查看网桥信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" inspect 网桥名\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" inspect ems\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);