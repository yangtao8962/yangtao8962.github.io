(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{438:function(n,t,s){"use strict";s.r(t);var a=s(56),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 初始化本地仓库 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" init                             \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看本地库状态")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" status                            \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 添加文件到暂存区 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("add")]),n._v(" 文件名                       \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 提交到本地库 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"日志信息"')]),n._v(" 文件名        \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看历史记录 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" reflog                           \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看版本详细信息 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" log                              \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 撤销commit")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" reset --soft HEAD^               \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 撤销add")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" reset --mixed HEAD^              \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 回到上一次commit  ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" reset --hard HEAD^               \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 修改注释")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" commit ---amend                  \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 版本穿梭          ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" reset --hard 版本号              \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看本地所有分支 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch                           \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看远程所有分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch -r                         \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看分支信息，附带版本 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch -v                        \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看本地和远程所有分支 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch -a                        \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 创建分支，停留在当前分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch 分支名                    \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 创建并切换到新分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch -f 分支名                   \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 删除本地分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch -d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("D 分支名              \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 将本地分支推送至远程分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch 本地分支:远程分支名       \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 删除远程分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch :远程分支名              \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 重命名分支，如是远程分支，则先删除后推送新分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" branch -m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("M 旧分支名 新分支名     \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 切换分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" checkout 分支名                  \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 把指定的分支合并到当前分支上")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" merge 分支名                     \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 查看当前所有远程地址别名")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" remote -v                         \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 起别名")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("add")]),n._v(" 别名 远程地址         \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 推送本地分支上的内容到远程仓库 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" push 别名 分支                   \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 删除远程分支 ")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" push origin --delete 远程分支名  \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# -u指定默认主机，以后可直接使用git push")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" push -u 别名 分支                \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 删除远程分支，等同git push 别名 --delete 分支")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" push 别名:分支                   \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 将远仓库的内容克隆到本地")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" clone 远程地址                   \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 将远程仓库对于分支最新内容拉下来后于当前本地分支直接合并")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" pull 远程库地址别名 远程分支名  \n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);